plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'study'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

def querydslVersion = '4.3.1'

repositories {
	mavenCentral()
}

apply plugin: "io.spring.dependency-management"
dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	//html 파일을 컴파일만 해주면 서버 재 시작없이 파일 변경 가능
    // 메뉴 build -> Recompile
	implementation 'org.springframework.boot:spring-boot-devtools'
	// NotEmpty 같은 어노테이션을 사용하기 위해 추가
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'
	//Spring Security 추가
//	implementation 'org.springframework.boot:spring-boot-starter-security'
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'

	//querydsl 추가
	compile("com.querydsl:querydsl-core") // querydsl
	compile("com.querydsl:querydsl-jpa") // querydsl
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


}

test {
	useJUnitPlatform()
}

def generated='src/main/generated'

sourceSets {
	main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
	file(generated).deleteDir()
}



